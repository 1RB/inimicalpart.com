server {
    listen 80;
    server_name inimicalpart.com www.inimicalpart.com;
    return 301 https://inimicalpart.com$request_uri;
}
upstream main_website {
     server 127.0.0.1:7798;
}
upstream heroku_server {
    server 127.0.0.1:7892;
}
upstream forward_server {
    server 127.0.0.1:3375;
}
server {
    listen 443 ssl;
    listen 80;
    server_name ws.inimicalpart.com;

    location / {
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        proxy_set_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        proxy_set_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        proxy_set_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
        proxy_pass http://heroku_server/;
    }
    ssl_certificate /etc/ssl/website/domain.cert.pem;
    ssl_certificate_key /etc/ssl/website/private.key.pem;
    ssl_trusted_certificate /etc/ssl/website/intermediate.cert.pem;
}
server {
    listen 443 ssl;
    listen 80;
    access_log /var/www/logs/forward/access.log combined;
    error_log /var/www/logs/forward/error.log debug;
    server_name forward.inimicalpart.com;
    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_pass http://forward_server/;
    }

    ssl_certificate /etc/ssl/website/domain.cert.pem;
    ssl_certificate_key /etc/ssl/website/private.key.pem;
    ssl_trusted_certificate /etc/ssl/website/intermediate.cert.pem;
}
server {
    listen 443 ssl;
    listen 80;
    server_name api.inimicalpart.com;
    root /var/www/api;

    location /v1/presence {
      add_header 'Access-Control-Allow-Origin' '*' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
	  add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control-Content-Type,Range' always;
	  add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
	  proxy_set_header X-Forwarded-For $remote_addr;
	  proxy_pass http://localhost:3000;
    }
    location ~ (/v1/img|/v1/img.png) {
      add_header Last-Modified $date_gmt;
      add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
      add_header Content-Type image/png;
    #   add_header Expires $date_gmt;
      if_modified_since off;
      expires off;
      etag off;
	  proxy_set_header X-Forwarded-For $remote_addr;
	  proxy_pass http://localhost:3000;
    }

    ssl_certificate /etc/ssl/website/domain.cert.pem;
    ssl_certificate_key /etc/ssl/website/private.key.pem;
    ssl_trusted_certificate /etc/ssl/website/intermediate.cert.pem;
}


server {
    listen 443 ssl;
    root /var/www/website/build;
    server_name inimicalpart.com www.inimicalpart.com;
    access_log /var/www/logs/access.log combined;
    error_log /var/www/logs/error.log error;
    location /maintenance.html {
        return 301 https://inimicalpart.com/;
    }
    location / {
      add_header 'Access-Control-Allow-Origin' '*' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
	  add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control-Content-Type,Range' always;
	  add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
	  proxy_set_header X-Forwarded-For $remote_addr;
	  proxy_pass http://main_website/;
    }

    # location /api/img {
    #   add_header Last-Modified $date_gmt;
    #   add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    #   add_header Content-Type image/png;
    #   if_modified_since off;
    #   expires off;
    #   etag off;
    #   add_header 'Access-Control-Allow-Origin' '*' always;
    #   add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
    #   add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control-Content-Type,Range' always;
    #   add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
	#   proxy_set_header X-Forwarded-For $remote_addr;
	#   proxy_pass http://main_website;
    # }


    location ~ (img/years.png|img/seconds.png|img/minutes.png|img/hours.png|img/days.png|img/months.png|img/weeks.png) {
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        add_header Content-Type image/png;
        if_modified_since off;
        expires off;
        etag off;
    }


    ssl_certificate /etc/ssl/website/domain.cert.pem;
    ssl_certificate_key /etc/ssl/website/private.key.pem;
    ssl_trusted_certificate /etc/ssl/website/intermediate.cert.pem;

}

